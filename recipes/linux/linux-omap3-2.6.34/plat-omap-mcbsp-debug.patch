diff --git git/arch/arm/plat-omap/include/plat/mcbsp.h git/arch/arm/plat-omap/include/plat/mcbsp.h
index 7de903d..4e13c96 100644
--- git/arch/arm/plat-omap/include/plat/mcbsp.h
+++ git/arch/arm/plat-omap/include/plat/mcbsp.h
@@ -149,6 +149,8 @@
 #define OMAP_MCBSP_REG_WAKEUPEN	0xA8
 #define OMAP_MCBSP_REG_XCCR	0xAC
 #define OMAP_MCBSP_REG_RCCR	0xB0
+#define OMAP_MCBSP_REG_XBUFFSTAT	0xB4
+#define OMAP_MCBSP_REG_RBUFFSTAT	0xB8
 #define OMAP_MCBSP_REG_SSELCR	0xBC
 
 #define OMAP_ST_REG_REV		0x00
@@ -462,9 +464,12 @@ struct omap_mcbsp {
 extern struct omap_mcbsp **mcbsp_ptr;
 extern int omap_mcbsp_count, omap_mcbsp_cache_size;
 
+struct omap_mcbsp* omap_mcbsp_get_mcbsp_ptr(u8 id);
+
 int omap_mcbsp_init(void);
 void omap_mcbsp_register_board_cfg(struct omap_mcbsp_platform_data *config,
 					int size);
+void omap_mcbsp_dump_reg(u8 id);
 void omap_mcbsp_config(unsigned int id, const struct omap_mcbsp_reg_cfg * config);
 #ifdef CONFIG_ARCH_OMAP3
 void omap_mcbsp_set_tx_threshold(unsigned int id, u16 threshold);
diff --git git/arch/arm/plat-omap/mcbsp.c git/arch/arm/plat-omap/mcbsp.c
index e1d0440..0603a49 100644
--- git/arch/arm/plat-omap/mcbsp.c
+++ git/arch/arm/plat-omap/mcbsp.c
@@ -14,6 +14,7 @@
 
 #include <linux/module.h>
 #include <linux/init.h>
+#define DEBUG
 #include <linux/device.h>
 #include <linux/platform_device.h>
 #include <linux/wait.h>
@@ -88,19 +89,20 @@ int omap_mcbsp_st_read(struct omap_mcbsp *mcbsp, u16 reg)
 #define MCBSP_ST_WRITE(mcbsp, reg, val) \
 			omap_mcbsp_st_write(mcbsp, OMAP_ST_REG_##reg, val)
 
-static void omap_mcbsp_dump_reg(u8 id)
+struct omap_mcbsp* omap_mcbsp_get_mcbsp_ptr(u8 id)
+{
+	if (!omap_mcbsp_check_valid_id(id))
+		return NULL;
+
+	return id_to_mcbsp_ptr(id);
+}
+EXPORT_SYMBOL(omap_mcbsp_get_mcbsp_ptr);
+
+void omap_mcbsp_dump_reg(u8 id)
 {
 	struct omap_mcbsp *mcbsp = id_to_mcbsp_ptr(id);
 
 	dev_dbg(mcbsp->dev, "**** McBSP%d regs ****\n", mcbsp->id);
-	dev_dbg(mcbsp->dev, "DRR2:  0x%04x\n",
-			MCBSP_READ(mcbsp, DRR2));
-	dev_dbg(mcbsp->dev, "DRR1:  0x%04x\n",
-			MCBSP_READ(mcbsp, DRR1));
-	dev_dbg(mcbsp->dev, "DXR2:  0x%04x\n",
-			MCBSP_READ(mcbsp, DXR2));
-	dev_dbg(mcbsp->dev, "DXR1:  0x%04x\n",
-			MCBSP_READ(mcbsp, DXR1));
 	dev_dbg(mcbsp->dev, "SPCR2: 0x%04x\n",
 			MCBSP_READ(mcbsp, SPCR2));
 	dev_dbg(mcbsp->dev, "SPCR1: 0x%04x\n",
@@ -119,8 +121,21 @@ static void omap_mcbsp_dump_reg(u8 id)
 			MCBSP_READ(mcbsp, SRGR1));
 	dev_dbg(mcbsp->dev, "PCR0:  0x%04x\n",
 			MCBSP_READ(mcbsp, PCR0));
+	dev_dbg(mcbsp->dev, "THRSH2:  0x%04x\n",
+			MCBSP_READ(mcbsp, THRSH2));
+	dev_dbg(mcbsp->dev, "THRSH1:  0x%04x\n",
+			MCBSP_READ(mcbsp, THRSH1));
+	dev_dbg(mcbsp->dev, "IRQSTATUS:  0x%04x\n",
+			MCBSP_READ(mcbsp, IRQST));
+	dev_dbg(mcbsp->dev, "IRQENABLE:  0x%04x\n",
+			MCBSP_READ(mcbsp, IRQEN));
+	dev_dbg(mcbsp->dev, "XBUFFSTAT:  0x%04x\n",
+			MCBSP_READ(mcbsp, XBUFFSTAT));
+	dev_dbg(mcbsp->dev, "RBUFFSTAT:  0x%04x\n",
+			MCBSP_READ(mcbsp, RBUFFSTAT));
 	dev_dbg(mcbsp->dev, "***********************\n");
 }
+EXPORT_SYMBOL(omap_mcbsp_dump_reg);
 
 static irqreturn_t omap_mcbsp_tx_irq_handler(int irq, void *dev_id)
 {
@@ -156,7 +171,7 @@ static irqreturn_t omap_mcbsp_rx_irq_handler(int irq, void *dev_id)
 		/* Writing zero to RSYNC_ERR clears the IRQ */
 		MCBSP_WRITE(mcbsp_rx, SPCR1, MCBSP_READ_CACHE(mcbsp_rx, SPCR1));
 	} else {
-		complete(&mcbsp_rx->tx_irq_completion);
+		complete(&mcbsp_rx->rx_irq_completion);
 	}
 
 	return IRQ_HANDLED;
@@ -209,6 +224,18 @@ void omap_mcbsp_config(unsigned int id, const struct omap_mcbsp_reg_cfg *config)
 	dev_dbg(mcbsp->dev, "Configuring McBSP%d  phys_base: 0x%08lx\n",
 			mcbsp->id, mcbsp->phys_base);
 
+	if (mcbsp->io_type == OMAP_MCBSP_IRQ_IO)
+		dev_dbg(mcbsp->dev, "io_type: IRQ\n");
+	else if (mcbsp->io_type == OMAP_MCBSP_POLL_IO)
+		dev_dbg(mcbsp->dev, "io_type: POLL\n");
+	else
+		dev_dbg(mcbsp->dev, "io_type: ?: %d\n", mcbsp->io_type);
+
+	dev_dbg(mcbsp->dev, "tx_irq: %d\n", mcbsp->tx_irq);
+	dev_dbg(mcbsp->dev, "rx_irq: %d\n", mcbsp->rx_irq);
+	dev_dbg(mcbsp->dev, "dma_rx_sync: 0x%02X\n", mcbsp->dma_rx_sync);
+	dev_dbg(mcbsp->dev, "dma_tx_sync: 0x%02X\n", mcbsp->dma_tx_sync);
+
 	/* We write the given config */
 	MCBSP_WRITE(mcbsp, SPCR2, config->spcr2);
 	MCBSP_WRITE(mcbsp, SPCR1, config->spcr1);
@@ -828,8 +855,9 @@ void omap_mcbsp_start(unsigned int id, int tx, int rx)
 
 	if (idle) {
 		/* Start the sample generator */
+		printk(KERN_ALERT "Idle: starting SRG\n");
 		w = MCBSP_READ_CACHE(mcbsp, SPCR2);
-		MCBSP_WRITE(mcbsp, SPCR2, w | (1 << 6));
+		MCBSP_WRITE(mcbsp, SPCR2, w | GRST); /* (1 << 6)); */
 	}
 
 	/* Enable transmitter and receiver */
@@ -851,8 +879,9 @@ void omap_mcbsp_start(unsigned int id, int tx, int rx)
 
 	if (idle) {
 		/* Start frame sync */
+		printk(KERN_ALERT "Idle: starting frame sync\n");
 		w = MCBSP_READ_CACHE(mcbsp, SPCR2);
-		MCBSP_WRITE(mcbsp, SPCR2, w | (1 << 7));
+		MCBSP_WRITE(mcbsp, SPCR2, w | FRST); /* (1 << 7)); */
 	}
 
 	if (cpu_is_omap2430() || cpu_is_omap34xx()) {
@@ -921,7 +950,7 @@ EXPORT_SYMBOL(omap_mcbsp_stop);
 int omap_mcbsp_pollwrite(unsigned int id, u16 buf)
 {
 	struct omap_mcbsp *mcbsp;
-
+	
 	if (!omap_mcbsp_check_valid_id(id)) {
 		printk(KERN_ERR "%s: Invalid id (%d)\n", __func__, id + 1);
 		return -ENODEV;
@@ -929,7 +958,7 @@ int omap_mcbsp_pollwrite(unsigned int id, u16 buf)
 
 	mcbsp = id_to_mcbsp_ptr(id);
 
-	MCBSP_WRITE(mcbsp, DXR1, buf);
+	MCBSP_WRITE(mcbsp, DXR, buf);
 	/* if frame sync error - clear the error */
 	if (MCBSP_READ(mcbsp, SPCR2) & XSYNC_ERR) {
 		/* clear error */
@@ -995,7 +1024,7 @@ int omap_mcbsp_pollread(unsigned int id, u16 *buf)
 			}
 		}
 	}
-	*buf = MCBSP_READ(mcbsp, DRR1);
+	*buf = MCBSP_READ(mcbsp, DRR);
 
 	return 0;
 }
@@ -1623,6 +1652,7 @@ static void __devexit omap_st_remove(struct omap_mcbsp *mcbsp)
 static inline void __devinit omap34xx_device_init(struct omap_mcbsp *mcbsp)
 {
 	mcbsp->dma_op_mode = MCBSP_DMA_MODE_ELEMENT;
+	
 	if (cpu_is_omap34xx()) {
 		mcbsp->max_tx_thres = max_thres(mcbsp);
 		mcbsp->max_rx_thres = max_thres(mcbsp);
@@ -1633,7 +1663,7 @@ static inline void __devinit omap34xx_device_init(struct omap_mcbsp *mcbsp)
 		if (omap_additional_add(mcbsp->dev))
 			dev_warn(mcbsp->dev,
 				"Unable to create additional controls\n");
-
+		
 		if (mcbsp->id == 2 || mcbsp->id == 3)
 			if (omap_st_add(mcbsp))
 				dev_warn(mcbsp->dev,
